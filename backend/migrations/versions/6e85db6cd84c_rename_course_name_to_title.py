"""rename_course_name_to_title

Revision ID: 6e85db6cd84c
Revises: 7ddbf9820c62
Create Date: 2025-09-23 02:04:16.445921

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6e85db6cd84c'
down_revision = '7ddbf9820c62'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Use batch mode for SQLite compatibility
    with op.batch_alter_table('courses') as batch_op:
        # Add title column as nullable first
        batch_op.add_column(sa.Column('title', sa.String(length=200), nullable=True))
        
        # Make title NOT NULL
        batch_op.alter_column('title', nullable=False)
        
        batch_op.drop_index('ix_courses_name')
        batch_op.create_index(op.f('ix_courses_title'), ['title'], unique=False)
        batch_op.drop_column('name')
    
    # Note: Foreign key constraints are not supported in SQLite migrations
    # They will be handled by the application layer
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('courses', sa.Column('name', sa.VARCHAR(length=200), nullable=False))
    op.drop_index(op.f('ix_courses_title'), table_name='courses')
    op.create_index('ix_courses_name', 'courses', ['name'], unique=False)
    op.alter_column('courses', 'max_file_size_mb',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('(1024)'))
    op.alter_column('courses', 'content_unlock_mode',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text('("immediate")'))
    op.drop_column('courses', 'title')
    op.drop_constraint(None, 'content', type_='foreignkey')
    op.drop_constraint(None, 'content', type_='foreignkey')
    # ### end Alembic commands ###
